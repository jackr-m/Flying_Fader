(function() {var type_impls = {
"embassy_usb":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Driver-for-Device%3C'd,+MTU%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/embassy_net_driver_channel/lib.rs.html#278\">source</a><a href=\"#impl-Driver-for-Device%3C'd,+MTU%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'d, const MTU: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"embassy_net_driver/trait.Driver.html\" title=\"trait embassy_net_driver::Driver\">Driver</a> for <a class=\"struct\" href=\"embassy_net_driver_channel/struct.Device.html\" title=\"struct embassy_net_driver_channel::Device\">Device</a>&lt;'d, MTU&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.transmit\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/embassy_net_driver_channel/lib.rs.html#291\">source</a><a href=\"#method.transmit\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embassy_net_driver/trait.Driver.html#tymethod.transmit\" class=\"fn\">transmit</a>(\n    &amp;mut self,\n    cx: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&lt;<a class=\"struct\" href=\"embassy_net_driver_channel/struct.Device.html\" title=\"struct embassy_net_driver_channel::Device\">Device</a>&lt;'d, MTU&gt; as <a class=\"trait\" href=\"embassy_net_driver/trait.Driver.html\" title=\"trait embassy_net_driver::Driver\">Driver</a>&gt;::<a class=\"associatedtype\" href=\"embassy_net_driver/trait.Driver.html#associatedtype.TxToken\" title=\"type embassy_net_driver::Driver::TxToken\">TxToken</a>&lt;'_&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Construct a transmit token.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.capabilities\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/embassy_net_driver_channel/lib.rs.html#300\">source</a><a href=\"#method.capabilities\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embassy_net_driver/trait.Driver.html#tymethod.capabilities\" class=\"fn\">capabilities</a>(&amp;self) -&gt; <a class=\"struct\" href=\"embassy_net_driver/struct.Capabilities.html\" title=\"struct embassy_net_driver::Capabilities\">Capabilities</a></h4></section></summary><div class=\"docblock\"><p>Get a description of device capabilities.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.RxToken\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.RxToken\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"embassy_net_driver/trait.Driver.html#associatedtype.RxToken\" class=\"associatedtype\">RxToken</a>&lt;'a&gt; = <a class=\"struct\" href=\"embassy_net_driver_channel/struct.RxToken.html\" title=\"struct embassy_net_driver_channel::RxToken\">RxToken</a>&lt;'a, MTU&gt;\n<span class=\"where\">where\n    <a class=\"struct\" href=\"embassy_net_driver_channel/struct.Device.html\" title=\"struct embassy_net_driver_channel::Device\">Device</a>&lt;'d, MTU&gt;: 'a</span></h4></section></summary><div class='docblock'>A token to receive a single network packet.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.TxToken\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.TxToken\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"embassy_net_driver/trait.Driver.html#associatedtype.TxToken\" class=\"associatedtype\">TxToken</a>&lt;'a&gt; = <a class=\"struct\" href=\"embassy_net_driver_channel/struct.TxToken.html\" title=\"struct embassy_net_driver_channel::TxToken\">TxToken</a>&lt;'a, MTU&gt;\n<span class=\"where\">where\n    <a class=\"struct\" href=\"embassy_net_driver_channel/struct.Device.html\" title=\"struct embassy_net_driver_channel::Device\">Device</a>&lt;'d, MTU&gt;: 'a</span></h4></section></summary><div class='docblock'>A token to transmit a single network packet.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.receive\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/embassy_net_driver_channel/lib.rs.html#282\">source</a><a href=\"#method.receive\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embassy_net_driver/trait.Driver.html#tymethod.receive\" class=\"fn\">receive</a>(\n    &amp;mut self,\n    cx: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&lt;<a class=\"struct\" href=\"embassy_net_driver_channel/struct.Device.html\" title=\"struct embassy_net_driver_channel::Device\">Device</a>&lt;'d, MTU&gt; as <a class=\"trait\" href=\"embassy_net_driver/trait.Driver.html\" title=\"trait embassy_net_driver::Driver\">Driver</a>&gt;::<a class=\"associatedtype\" href=\"embassy_net_driver/trait.Driver.html#associatedtype.RxToken\" title=\"type embassy_net_driver::Driver::RxToken\">RxToken</a>&lt;'_&gt;, &lt;<a class=\"struct\" href=\"embassy_net_driver_channel/struct.Device.html\" title=\"struct embassy_net_driver_channel::Device\">Device</a>&lt;'d, MTU&gt; as <a class=\"trait\" href=\"embassy_net_driver/trait.Driver.html\" title=\"trait embassy_net_driver::Driver\">Driver</a>&gt;::<a class=\"associatedtype\" href=\"embassy_net_driver/trait.Driver.html#associatedtype.TxToken\" title=\"type embassy_net_driver::Driver::TxToken\">TxToken</a>&lt;'_&gt;)&gt;</h4></section></summary><div class='docblock'>Construct a token pair consisting of one receive token and one transmit token. <a href=\"embassy_net_driver/trait.Driver.html#tymethod.receive\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hardware_address\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/embassy_net_driver_channel/lib.rs.html#304\">source</a><a href=\"#method.hardware_address\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embassy_net_driver/trait.Driver.html#tymethod.hardware_address\" class=\"fn\">hardware_address</a>(&amp;self) -&gt; <a class=\"enum\" href=\"embassy_net_driver/enum.HardwareAddress.html\" title=\"enum embassy_net_driver::HardwareAddress\">HardwareAddress</a></h4></section></summary><div class='docblock'>Get the device’s hardware address. <a href=\"embassy_net_driver/trait.Driver.html#tymethod.hardware_address\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.link_state\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/embassy_net_driver_channel/lib.rs.html#308\">source</a><a href=\"#method.link_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"embassy_net_driver/trait.Driver.html#tymethod.link_state\" class=\"fn\">link_state</a>(&amp;mut self, cx: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"embassy_net_driver/enum.LinkState.html\" title=\"enum embassy_net_driver::LinkState\">LinkState</a></h4></section></summary><div class='docblock'>Get the link state. <a href=\"embassy_net_driver/trait.Driver.html#tymethod.link_state\">Read more</a></div></details></div></details>","Driver","embassy_usb::class::cdc_ncm::embassy_net::Device"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()