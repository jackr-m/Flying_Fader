(function() {var implementors = {
"embassy_stm32":[["impl&lt;'d, T: <a class=\"trait\" href=\"embassy_stm32/i2c/trait.Instance.html\" title=\"trait embassy_stm32::i2c::Instance\">Instance</a>&gt; <a class=\"trait\" href=\"embassy_embedded_hal/trait.SetConfig.html\" title=\"trait embassy_embedded_hal::SetConfig\">SetConfig</a> for <a class=\"struct\" href=\"embassy_stm32/i2c/struct.I2c.html\" title=\"struct embassy_stm32::i2c::I2c\">I2c</a>&lt;'d, T&gt;"],["impl&lt;'d, T: <a class=\"trait\" href=\"embassy_stm32/spi/trait.Instance.html\" title=\"trait embassy_stm32::spi::Instance\">Instance</a>, Tx, Rx&gt; <a class=\"trait\" href=\"embassy_embedded_hal/trait.SetConfig.html\" title=\"trait embassy_embedded_hal::SetConfig\">SetConfig</a> for <a class=\"struct\" href=\"embassy_stm32/spi/struct.Spi.html\" title=\"struct embassy_stm32::spi::Spi\">Spi</a>&lt;'d, T, Tx, Rx&gt;"],["impl&lt;'d, T: <a class=\"trait\" href=\"embassy_stm32/usart/trait.BasicInstance.html\" title=\"trait embassy_stm32::usart::BasicInstance\">BasicInstance</a>&gt; <a class=\"trait\" href=\"embassy_embedded_hal/trait.SetConfig.html\" title=\"trait embassy_embedded_hal::SetConfig\">SetConfig</a> for <a class=\"struct\" href=\"embassy_stm32/usart/struct.BufferedUart.html\" title=\"struct embassy_stm32::usart::BufferedUart\">BufferedUart</a>&lt;'d, T&gt;"],["impl&lt;'d, T: <a class=\"trait\" href=\"embassy_stm32/usart/trait.BasicInstance.html\" title=\"trait embassy_stm32::usart::BasicInstance\">BasicInstance</a>&gt; <a class=\"trait\" href=\"embassy_embedded_hal/trait.SetConfig.html\" title=\"trait embassy_embedded_hal::SetConfig\">SetConfig</a> for <a class=\"struct\" href=\"embassy_stm32/usart/struct.BufferedUartRx.html\" title=\"struct embassy_stm32::usart::BufferedUartRx\">BufferedUartRx</a>&lt;'d, T&gt;"],["impl&lt;'d, T: <a class=\"trait\" href=\"embassy_stm32/usart/trait.BasicInstance.html\" title=\"trait embassy_stm32::usart::BasicInstance\">BasicInstance</a>&gt; <a class=\"trait\" href=\"embassy_embedded_hal/trait.SetConfig.html\" title=\"trait embassy_embedded_hal::SetConfig\">SetConfig</a> for <a class=\"struct\" href=\"embassy_stm32/usart/struct.BufferedUartTx.html\" title=\"struct embassy_stm32::usart::BufferedUartTx\">BufferedUartTx</a>&lt;'d, T&gt;"],["impl&lt;'d, T: <a class=\"trait\" href=\"embassy_stm32/usart/trait.BasicInstance.html\" title=\"trait embassy_stm32::usart::BasicInstance\">BasicInstance</a>, RxDma&gt; <a class=\"trait\" href=\"embassy_embedded_hal/trait.SetConfig.html\" title=\"trait embassy_embedded_hal::SetConfig\">SetConfig</a> for <a class=\"struct\" href=\"embassy_stm32/usart/struct.UartRx.html\" title=\"struct embassy_stm32::usart::UartRx\">UartRx</a>&lt;'d, T, RxDma&gt;"],["impl&lt;'d, T: <a class=\"trait\" href=\"embassy_stm32/usart/trait.BasicInstance.html\" title=\"trait embassy_stm32::usart::BasicInstance\">BasicInstance</a>, RxDma: <a class=\"trait\" href=\"embassy_stm32/usart/trait.RxDma.html\" title=\"trait embassy_stm32::usart::RxDma\">RxDma</a>&lt;T&gt;&gt; <a class=\"trait\" href=\"embassy_embedded_hal/trait.SetConfig.html\" title=\"trait embassy_embedded_hal::SetConfig\">SetConfig</a> for <a class=\"struct\" href=\"embassy_stm32/usart/struct.RingBufferedUartRx.html\" title=\"struct embassy_stm32::usart::RingBufferedUartRx\">RingBufferedUartRx</a>&lt;'d, T, RxDma&gt;"],["impl&lt;'d, T: <a class=\"trait\" href=\"embassy_stm32/usart/trait.BasicInstance.html\" title=\"trait embassy_stm32::usart::BasicInstance\">BasicInstance</a>, TxDma&gt; <a class=\"trait\" href=\"embassy_embedded_hal/trait.SetConfig.html\" title=\"trait embassy_embedded_hal::SetConfig\">SetConfig</a> for <a class=\"struct\" href=\"embassy_stm32/usart/struct.UartTx.html\" title=\"struct embassy_stm32::usart::UartTx\">UartTx</a>&lt;'d, T, TxDma&gt;"],["impl&lt;'d, T: <a class=\"trait\" href=\"embassy_stm32/usart/trait.BasicInstance.html\" title=\"trait embassy_stm32::usart::BasicInstance\">BasicInstance</a>, TxDma, RxDma&gt; <a class=\"trait\" href=\"embassy_embedded_hal/trait.SetConfig.html\" title=\"trait embassy_embedded_hal::SetConfig\">SetConfig</a> for <a class=\"struct\" href=\"embassy_stm32/usart/struct.Uart.html\" title=\"struct embassy_stm32::usart::Uart\">Uart</a>&lt;'d, T, TxDma, RxDma&gt;"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()