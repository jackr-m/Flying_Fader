(function() {var implementors = {
"embassy_embedded_hal":[["impl&lt;M, BUS&gt; <a class=\"trait\" href=\"embedded_hal/i2c/trait.I2c.html\" title=\"trait embedded_hal::i2c::I2c\">I2c</a> for <a class=\"struct\" href=\"embassy_embedded_hal/shared_bus/blocking/i2c/struct.I2cDevice.html\" title=\"struct embassy_embedded_hal::shared_bus::blocking::i2c::I2cDevice\">I2cDevice</a>&lt;'_, M, BUS&gt;<div class=\"where\">where\n    M: RawMutex,\n    BUS: <a class=\"trait\" href=\"embedded_hal/i2c/trait.I2c.html\" title=\"trait embedded_hal::i2c::I2c\">I2c</a>,</div>"],["impl&lt;M, BUS&gt; <a class=\"trait\" href=\"embedded_hal/i2c/trait.I2c.html\" title=\"trait embedded_hal::i2c::I2c\">I2c</a> for <a class=\"struct\" href=\"embassy_embedded_hal/shared_bus/blocking/i2c/struct.I2cDeviceWithConfig.html\" title=\"struct embassy_embedded_hal::shared_bus::blocking::i2c::I2cDeviceWithConfig\">I2cDeviceWithConfig</a>&lt;'_, M, BUS&gt;<div class=\"where\">where\n    M: RawMutex,\n    BUS: <a class=\"trait\" href=\"embedded_hal/i2c/trait.I2c.html\" title=\"trait embedded_hal::i2c::I2c\">I2c</a> + <a class=\"trait\" href=\"embassy_embedded_hal/trait.SetConfig.html\" title=\"trait embassy_embedded_hal::SetConfig\">SetConfig</a>,</div>"]],
"embassy_stm32":[["impl&lt;'d, T: <a class=\"trait\" href=\"embassy_stm32/i2c/trait.Instance.html\" title=\"trait embassy_stm32::i2c::Instance\">Instance</a>&gt; <a class=\"trait\" href=\"embedded_hal/i2c/trait.I2c.html\" title=\"trait embedded_hal::i2c::I2c\">I2c</a> for <a class=\"struct\" href=\"embassy_stm32/i2c/struct.I2c.html\" title=\"struct embassy_stm32::i2c::I2c\">I2c</a>&lt;'d, T, <a class=\"struct\" href=\"embassy_stm32/dma/struct.NoDma.html\" title=\"struct embassy_stm32::dma::NoDma\">NoDma</a>, <a class=\"struct\" href=\"embassy_stm32/dma/struct.NoDma.html\" title=\"struct embassy_stm32::dma::NoDma\">NoDma</a>&gt;"]],
"embedded_hal":[]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()