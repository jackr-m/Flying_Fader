searchState.loadedDescShard("sdio_host", 0, "SD Card Registers\nThe number of data lines in use on the SDMMC bus\nCard interface condition (R7)\nCard Identification Register (CID)\nCard Specific Data (CSD)\nTypes of SD Card\nCard Status (R1)\nHost to Card commands\nCURRENT_STATE enum. Used for R1 response in command queue …\nCard is disconnected\nError\nCard is in identification state\nOperation Conditions Register (OCR)\nCard is in programming state\nRelative Card Address (RCA)\nCard state is ready\nCard is receiving operation information\nSD CARD Configuration Register (SCR)\nHigh capacity (&lt; 32Gb)\nStandard Capacity (&lt; 2Gb)\nSD Status\nCard is sending an operation\nCard is in standby state\nCard is in transfer state\nVersion not known by this crate\nVersion 1.0 and and 1.0.1\nVersion 1.10\nVersion 2.0\nVersion 3.0\nVersion 4.0\nVersion 5.0\nVersion 6.0\nVersion 7.0\nAddress of card\nMisaligned address\nAuthentication sequence error\nAllocation Unit (AU) size. Lookup in PLSS v7_10 Table 4-47\nThe card will accept a ACMD\nApplication Performance Class\nNumber of blocks in the card\nBlock len error\nMaximum block length. In an SD Memory Card the …\nCurrent data bus width\nSupports 4-bit bus width\nSupports 1-bit bus width\nBus widths supported\nCard internal ECC failed\nCard is locked by the host\nCard size in bytes\nInternal controller error\nCrc check of previous command failed\nCSD error\nDiscard Support\nCommand was executed without internal ECC\nInvalid selection of blocks for erase\nErase sequence was aborted\nError in the erase commands sequence\nIndicates N_Erase, in units of AU\nErase size (in blocks)\nIndicates T_Erase / Erase Timeout (s)\nA General error occurred\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nExtension function specific status\nCard Capacity Status (CCS). True for SDHC/SDXC/SDUC, false …\nCommand is not legal for the card state\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCard power up status bit (busy)\nPassword error\nManufacturer ID\nManufacturing date\n“Performance Move” indicator in 1 MB/s units\nOEM/Application ID\nCommand’s argument was out of range\nOver 2TB support Status. Only SDUC card support this bit\nEcho-back check pattern\nProduct name\nProduct revision\nSDHC / SDXC: Capacity of Protected Area in bytes\nMaximum read current at the maximum VDD\nMaximum read current at the minimum VDD\nCorresponds to buffer empty signaling on the bus\nSD Memory Card type (ROM, OTP, etc)\nIs the card currently in the secured mode\nProduct serial number\nSpeed Class\nCurrent card state\nStatus\nMaximum data transfer rate per one data line\nIndicates whether the card supports UHS-II Interface\nSwitching to 1.8V Accepted (S18A). Only UHS-I cards …\nPhysical Layer Specification Version Number\nCSD structure version\nVideo speed class\nThe voltage range the card accepts\nVDD voltage window\nSome blocks where skipped while erasing\nHost attempted to write to protected area\nMaximum write current at the maximum VDD\nMaximum write current at the minimum VDD\nHost to Card commands\nR1: Normal response\nLong (136 bit) response\nR2: CID and CSD register\nR3: OCR register\nShort (48 bit) response\nR6: Published RCA response\nR7: Card interface condition\nCommand Response type\nMarker for commands that don’t have any response\nNo response expected\nCMD22: Address extension\nCMD2: Ask any card to send their CID\nCMD55: App Command. Indicates that next command will be a …\nCMD13: Ask card to send status or task status\nCMD6: Switch Function Command\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCMD15: Sends card to inactive state\nCMD0: Put card in idle mode\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCMD27: Program CSD\nCMD18: Read multiple block from the card\nCMD17: Read a single block from the card\nACMD41: App Op Command\nACMD13: SD Status\nCMD7: Select or deselect card\nCMD10: Send CID\nCMD9: Send CSD\nCMD8: Sends memory card interface conditions\nCMD3: Send RCA\nACMD51: Reads the SCR\nCMD19: Send tuning pattern\nCMD23: Address extension\nCMD16: Set block len\nACMD6: Bus Width\nCMD20: Speed class control\nCMD12: Stop transmission\nCMD11: Switch to 1.8V bus signaling level\nCMD25: Write multiple blocks\nCMD24: Write block")