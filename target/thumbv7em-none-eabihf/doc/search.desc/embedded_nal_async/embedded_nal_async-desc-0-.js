searchState.loadedDescShard("embedded_nal_async", 0, "embedded-nal-async - An async Network Abstraction Layer …\nThis is the host address type to be returned by …\nAn IPv4 address representing the broadcast address: …\nEventual socket return type of the [<code>.connect()</code>] method\nThis trait is implemented by UDP sockets.\nType holding state of a TCP connection. Should close the …\nThis trait is an extension trait for <code>TcpStack</code> and <code>UdpStack</code> …\nResult is either a <code>A</code> record, or a <code>AAAA</code> record\nThe type returned when we have an error\nError type returned on connect failure.\nError type returned by send and receive operations.\nError type returned by send and receive operations.\nError type returned on socket creation failure.\nResult is <code>A</code> record\nResult is <code>AAAA</code> record\nAn IP address, either IPv4 or IPv6.\nAn IPv4 address.\nAn IPv6 address.\nAn IPv4 address with the address pointing to localhost: …\nAn IPv6 address representing localhost: <code>::1</code>.\nEventual return type of the [<code>.bind_multiple()</code>] method\nAn internet socket address, either IPv4 or IPv6.\nAn IPv4 socket address.\nAn IPv6 socket address.\nThis trait is implemented by TCP/IP stacks. The trait …\nAn IPv4 address representing an unspecified address: …\nAn IPv6 address representing the unspecified address: <code>::</code>\nThis trait is implemented by UDP/IP stacks. The trait …\nThis trait is implemented by UDP sockets.\nEventual socket return type of the [<code>.bind_single()</code>] method\nAn IPv4 socket address.\nAn IPv4 address.\nAn IPv6 socket address.\nAn IPv6 address.\nCreate a socket that has no single fixed local address.\nCreate a socket that has a fixed local address.\nConnect to the given remote host and port.\nCreate a socket that has a fixed remote address.\nCreate a socket that has a fixed remote address.\nCreate a socket that has a fixed remote address.\nReturns the flow information associated with this address.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a tuple struct (Into&lt;<code>IpAddr</code>&gt;, <code>u16</code>) into a …\nConverts a <code>SocketAddrV6</code> into a <code>SocketAddr::V6</code>.\nConverts a <code>SocketAddrV4</code> into a <code>SocketAddr::V4</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates an <code>IpAddr::V4</code> from a four element byte array.\nCopies this address to a new <code>IpAddr::V4</code>.\nCopies this address to a new <code>IpAddr::V6</code>.\nCreates an <code>IpAddr::V6</code> from an eight element 16-bit array.\nCreates an <code>IpAddr::V6</code> from a sixteen element byte array.\nCreates an <code>Ipv4Addr</code> from a four element byte array.\nConverts a host byte order <code>u32</code> into an <code>Ipv4Addr</code>.\nReturns the argument unchanged.\nCreates an <code>Ipv6Addr</code> from an eight element 16-bit array.\nReturns the argument unchanged.\nConvert a host byte order <code>u128</code> into an <code>Ipv6Addr</code>.\nCreates an <code>Ipv6Addr</code> from a sixteen element byte array.\nResolve the hostname of a host, given its ip address.\nResolve the first ip address of a host, given its hostname …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the IP address associated with this socket address.\nReturns the IP address associated with this socket address.\nReturns the IP address associated with this socket address.\nReturns <code>true</code> if this is a broadcast address (…\nReturns <code>true</code> if this address is in a range designated for …\nReturns <code>true</code> if the IP address in this <code>SocketAddr</code> is an …\nReturns <code>true</code> if this address is an <code>IPv4</code> address, and <code>false</code> …\nReturns <code>true</code> if the IP address in this <code>SocketAddr</code> is an …\nReturns <code>true</code> if this address is an <code>IPv6</code> address, and <code>false</code> …\nReturns <code>true</code> if the address is link-local (<code>169.254.0.0/16</code>).\nReturns <code>true</code> if this is a loopback address.\nReturns <code>true</code> if this is a loopback address (<code>127.0.0.0/8</code>).\nReturns <code>true</code> if this is a loopback address (::1).\nReturns <code>true</code> if this is a multicast address.\nReturns <code>true</code> if this is a multicast address (<code>224.0.0.0/4</code>).\nReturns <code>true</code> if this is a multicast address (<code>ff00::/8</code>).\nReturns <code>true</code> if this is a private address.\nReturns <code>true</code> for the special ‘unspecified’ address.\nReturns <code>true</code> for the special ‘unspecified’ address (…\nReturns <code>true</code> for the special ‘unspecified’ address (<code>::</code>…\nCreates a new socket address from an IP address and a port …\nCreates a new socket address from an <code>IPv4</code> address and a …\nCreates a new socket address from an <code>IPv6</code> address, a …\nCreates a new IPv4 address from four eight-bit octets.\nCreates a new IPv6 address from eight 16-bit segments.\nReturns the four eight-bit integers that make up this …\nReturns the sixteen eight-bit integers the IPv6 address …\nReturns the port number associated with this socket …\nReturns the port number associated with this socket …\nReturns the port number associated with this socket …\nReceive a datagram into the provided buffer.\nReceive a datagram into the provided buffer.\nReturns the scope ID associated with this address.\nReturns the eight 16-bit segments that make up this …\nSend the provided data to the connected peer\nSend the provided data to a peer\nChanges the flow information associated with this socket …\nChanges the IP address associated with this socket address.\nChanges the IP address associated with this socket address.\nChanges the IP address associated with this socket address.\nChanges the port number associated with this socket …\nChanges the port number associated with this socket …\nChanges the port number associated with this socket …\nChanges the scope ID associated with this socket address.\nConverts this address to an <code>IPv4</code> address. Returns <code>None</code> if …\nConverts this address to an IPv4-compatible <code>IPv6</code> address.\nConverts this address to an IPv4-mapped <code>IPv6</code> address.")