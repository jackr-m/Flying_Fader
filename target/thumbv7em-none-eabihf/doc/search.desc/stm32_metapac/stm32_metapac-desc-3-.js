searchState.loadedDescShard("stm32_metapac", 3, "fSAMPLING=fDTS/8, N=8\nOCyREF is forced high\nOCyREF is forced low\nThe comparison between the output compare register …\nGated Mode - The counter clock is enabled when the trigger …\nWhen inactive, OC/OCN outputs are forced to idle level\nWhen inactive, OC/OCN outputs are enabled with their …\nSet channel to inactive level on match. OCyREF signal is …\ninput polarity is inverted (active high if BKxP = 0, …\nETR is inverted, active at low level or falling edge\nInternal Trigger 0\nInternal Trigger 1\nInternal Trigger 2\nInternal Trigger 3\nDTG bits in TIMx_BDTR register, OISx and OISxN bits in …\nLOCK Level 1 + CC Polarity bits (CCxP/CCxNP bits in …\nLOCK Level 2 + CC Control bits (OCxM and OCxPE bits in …\nTIM_OCxREFC is the logical AND of TIM_OCxREF and TIM_OC5REF\nNo effect of TIM_OC5REF on TIM_OCxREFC (x=1-3)\nNo filter, sampling is done at fDTS\nThe TIMx_CH1 pin is connected to TI1 input\nNo action\ninput polarity is not inverted (active low if BKxP = 0, …\nETR is noninverted, active at high level or rising edge\nCCx DMA request sent when CCx event occurs\nCCx DMA request sent when update event occurs\nCCx channel is configured as output\nIn upcounting, channel is active as long as TIMx_CNT&lt;…\nInversely to PwmMode1\nThe UG bit from the TIMx_EGR register is used as trigger …\nThe UG bit from the TIMx_EGR register is used as TRGO2\nReset Mode - Rising edge of the selected trigger input …\nThe effect of an event on the trigger input (TRGI) is …\nFiltered Timer Input 1\nTI1 Edge Detector\nFiltered Timer Input 2\nCCx channel is configured as input, alternate mapping …\nCCx channel is configured as input, normal mapping: ICx …\nOCyREF toggles when TIMx_CNT=TIMx_CCRy\nCCx channel is configured as input, ICx is mapped on TRC\nTrigger Mode - The counter starts at a rising edge of the …\nCounter used as upcounter\nThe update event is selected as trigger output\nThe update event is selected as TRGO2\nThe TIMx_CH1, CH2, CH3 pins are connected to TI1 input\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDevice Factory programmed 96-bit unique device identifier\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nFactory programmed 96-bit unique device identifier word 0\nLow-power Universal synchronous asynchronous receiver …\nUniversal synchronous asynchronous receiver transmitter\nBaud rate register\nBaud rate register\nControl register 1\nControl register 1\nControl register 2\nControl register 2\nControl register 3\nControl register 3\nReturns the argument unchanged.\nReturns the argument unchanged.\nGuard time and prescaler register\nInterrupt flag clear register\nInterrupt flag clear register\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInterrupt &amp; status register\nInterrupt &amp; status register\nPrescaler register\nPrescaler register\nReceive data register\nReceive data register\nRequest register\nRequest register\nReceiver timeout register\nTransmit data register\nTransmit data register\nBaud rate register\nControl register 1\nControl register 2\nControl register 3\nData register\nGuard time and prescaler register\nInterrupt flag clear register\nInterrupt &amp; status register\nPrescaler register\nRequest register\nReceiver timeout register\nAuto baud rate error\nAuto baud rate enable\nAuto baud rate flag\nAuto baud rate mode\nAuto baud rate request. Resets the ABRF flag in the …\nAddress of the USART node\n7-bit Address Detection/4-bit Address Detection\nBlock Length\nUSARTDIV\nBusy flag\nClock enable\nCharacter match clear flag\ncharacter match flag\nCharacter match interrupt enable\nClock phase\nClock polarity\nCTS clear flag\nCTS flag\nCTS enable\nCTS interrupt enable\nCTS interrupt flag\nBinary data inversion\nDMA Disable on Reception Error\nDriver Enable assertion time\nDriver Enable deassertion time\nDriver enable mode\nDriver enable polarity selection\nDMA enable receiver\nDMA enable transmitter\nData value\nError interrupt enable\nEnd of block clear flag\nEnd of block flag\nEnd of Block interrupt enable\nFraming error clear flag\nFraming error\nFIFO mode enable\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGuard time value\nHalf-duplex selection\nIdle line detected clear flag\nIdle line detected\nIDLE interrupt enable\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIrDA mode enable\nIrDA low-power\nLast bit clock pulse\nLIN break detection clear flag\nLIN break detection flag\nLIN break detection interrupt enable\nLine break detection length\nLIN mode enable\nWord length\nWord length\nMute mode enable\nMute mode request. Puts the USART in mute mode and sets …\nMost significant bit first\nSmartcard NACK enable\nNoise error clear flag\nNoise error flag\nOne sample bit method enable\nOverrun error clear flag\nOverrun error\nOversampling mode\nOverrun Disable\nParity control enable\nParity error clear flag\nParity error\nPE interrupt enable\nClock prescaler\nParity selection\nPrescaler value\nReceiver enable\nReceive enable acknowledge flag\nReceiver timeout value\nReceiver timeout enable\nReceiver timeout clear flag\nReceiver timeout\nReceiver timeout interrupt enable\nRTS enable\nReceiver wakeup from Mute mode\nRXFIFO Full\nRXFIFO Full interrupt enable\nReceive data flush request. Clears the RXNE flag. This …\nRXFIFO threshold flag\nReceive FIFO threshold configuration\nRXFIFO threshold interrupt enable\nRX pin active level inversion\nRead data register not empty\nRXNE interrupt enable\nSend break flag\nSend break request. Sets the SBKF flag and request to send …\nSmartcard auto-retry count\nSmartcard mode enable\nAuto baud rate error\nAuto baud rate enable\nAuto baud rate flag\nAuto baud rate mode\nAuto baud rate request. Resets the ABRF flag in the …\nAddress of the USART node\n7-bit Address Detection/4-bit Address Detection\nBlock Length\nUSARTDIV\nBusy flag\nClock enable\nCharacter match clear flag\ncharacter match flag\nCharacter match interrupt enable\nClock phase\nClock polarity\nCTS clear flag\nCTS flag\nCTS enable\nCTS interrupt enable\nCTS interrupt flag\nBinary data inversion\nDMA Disable on Reception Error\nDriver Enable assertion time\nDriver Enable deassertion time\nDriver enable mode\nDriver enable polarity selection\nDMA enable receiver\nDMA enable transmitter\nData value\nError interrupt enable\nEnd of block clear flag\nEnd of block flag\nEnd of Block interrupt enable\nFraming error clear flag\nFraming error\nFIFO mode enable\nGuard time value\nHalf-duplex selection\nIdle line detected clear flag\nIdle line detected\nIDLE interrupt enable\nIrDA mode enable\nIrDA low-power\nLast bit clock pulse\nLIN break detection clear flag\nLIN break detection flag\nLIN break detection interrupt enable\nLine break detection length\nLIN mode enable\nWord length\nWord length\nMute mode enable\nMute mode request. Puts the USART in mute mode and sets …\nMost significant bit first\nSmartcard NACK enable\nNoise error clear flag\nNoise error flag\nOne sample bit method enable\nOverrun error clear flag\nOverrun error\nOversampling mode\nOverrun Disable\nParity control enable\nParity error clear flag\nParity error\nPE interrupt enable\nClock prescaler\nParity selection\nPrescaler value\nReceiver enable\nReceive enable acknowledge flag\nReceiver timeout value\nReceiver timeout enable\nReceiver timeout clear flag\nReceiver timeout\nReceiver timeout interrupt enable\nRTS enable\nReceiver wakeup from Mute mode\nRXFIFO Full\nRXFIFO Full interrupt enable\nReceive data flush request. Clears the RXNE flag. This …\nRXFIFO threshold flag\nReceive FIFO threshold configuration\nRXFIFO threshold interrupt enable\nRX pin active level inversion\nRead data register not empty\nRXNE interrupt enable\nSend break flag\nSend break request. Sets the SBKF flag and request to send …\nSmartcard auto-retry count\nSmartcard mode enable\nSTOP bits\nSwap TX/RX pins\nTransmission complete clear flag\nTransmission complete\nTransmission complete interrupt enable\nTransmitter enable\nTransmit enable acknowledge flag\nTransmit data register empty\nTXE interrupt enable\nTXFIFO Empty\nTXFIFO empty interrupt enable\nTransmit data flush request. Sets the TXE flags. This …\nTXFIFO threshold flag\nTXFIFO threshold configuration\nTXFIFO threshold interrupt enable\nTX pin active level inversion\nUSART enable\nUSART enable in Stop mode\nReceiver wakeup method\nWakeup from Stop mode clear flag\nWakeup from Stop mode flag\nWakeup from Stop mode interrupt enable\nWakeup from Stop mode interrupt flag selection\nSTOP bits\nSwap TX/RX pins\nTransmission complete clear flag\nTransmission complete\nTransmission complete interrupt enable\nTransmitter enable\nTransmit enable acknowledge flag\nTransmit data register empty\nTXE interrupt enable\nTXFIFO Empty\nTXFIFO empty interrupt enable\nTransmit data flush request. Sets the TXE flags. This …\nTXFIFO threshold flag\nTXFIFO threshold configuration\nTXFIFO threshold interrupt enable\nTX pin active level inversion\nUSART enable\nUSART enable in Stop mode\nReceiver wakeup method\nWakeup from Stop mode clear flag\nWakeup from Stop mode flag\nWakeup from Stop mode interrupt enable\nWakeup from Stop mode interrupt flag selection\nReceiver in active mode\nWUF active on address match\nUSART wakeup on address mark\n10-bit break detection\n11-bit break detection\n4-bit address detection\n7-bit address detection\n1 start bit, 7 data bits, n stop bits\n1 start bit, 8 data bits, n stop bits\n1 start bit, 9 data bits, n stop bits\ninput clock not divided\ninput clock divided by 10\ninput clock divided by 12\ninput clock divided by 128\ninput clock divided by 16\ninput clock divided by 2\ninput clock divided by 256\ninput clock divided by 32\ninput clock divided by 4\ninput clock divided by 6\ninput clock divided by 64\ninput clock divided by 8\nFalling edge to falling edge measurement\nEven parity\nThe first clock transition is the first data capture edge\n0x55 frame detection\n0x7F frame detection\nSteady high value on CK pin outside transmission window\nDE signal is active high\nUSART wakeup on idle line\nSteady low value on CK pin outside transmission window\nDE signal is active low\nLow-power mode\ndata is transmitted/received with data bit 0 first, …\nUse M0 to set the data bits\ndata is transmitted/received with MSB (bit 7/8/9) first, …\nReceiver in mute mode\nNormal mode\nOdd parity\nOversampling by 16\nOversampling by 8\nWUF active on RXNE\nThe second clock transition is the first data capture edge\nMeasurement of the start bit is used to detect the baud …\nWuF active on Start bit detection\n0.5 stop bits\n1 stop bit\n1.5 stop bits\n2 stop bits\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nVoltage reference buffer.\nVREFBUF calibration control register.\nVREFBUF control and status register.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nVREFBUF calibration control register.\nVREFBUF control and status register.\nVoltage reference buffer mode enable This bit is used to …\nReturns the argument unchanged.\nReturns the argument unchanged.\nHigh impedance mode This bit controls the analog switch to …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nVoltage reference buffer mode enable This bit is used to …\nHigh impedance mode This bit controls the analog switch to …\nTrimming code The TRIM code is a 6-bit unsigned data …\nVoltage reference buffer ready.\nVoltage reference scale These bits select the value …\nTrimming code The TRIM code is a 6-bit unsigned data …\nVoltage reference buffer ready.\nVoltage reference scale These bits select the value …\nVREF+ pin is internally connected to the voltage reference …\nVREF+ pin is high impedance.\nVoltage reference set to VREF_OUT1 (around 2.048 V).\nVoltage reference set to VREF_OUT2 (around 2.5 V).\nVoltage reference set to VREF_OUT2 (around 2.5 V).\nVoltage reference set to VREF_OUT2 (around 2.5 V).\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWindow watchdog\nConfiguration register\nControl register\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nStatus register\nConfiguration register\nControl register\nStatus register\nEarly wakeup interrupt\nEarly wakeup interrupt flag\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nEarly wakeup interrupt\nEarly wakeup interrupt flag\n7-bit counter (MSB to LSB)\n7-bit window value\nActivation bit (true is enabled, false is disabled)\nTimer base\n7-bit counter (MSB to LSB)\n7-bit window value\nActivation bit (true is enabled, false is disabled)\nTimer base\nCounter clock (PCLK1 div 4096) div 1\nCounter clock (PCLK1 div 4096) div 128\nCounter clock (PCLK1 div 4096) div 16\nCounter clock (PCLK1 div 4096) div 2\nCounter clock (PCLK1 div 4096) div 32\nCounter clock (PCLK1 div 4096) div 4\nCounter clock (PCLK1 div 4096) div 64\nCounter clock (PCLK1 div 4096) div 8\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")