searchState.loadedDescShard("encode_unicode", 0, "Miscellaneous UTF-8 and UTF-16 types and methods.\nExtension trait for <code>char</code> that adds methods for converting …\nIterator methods that convert between <code>u8</code>s and <code>Utf8Char</code> or …\nMethods for iterating over <code>u8</code> and <code>u16</code> slices as UTF-8 or …\nAdds <code>.utf8chars()</code> and <code>.utf16chars()</code> iterator constructors …\nMethods for working with <code>u16</code>s as UTF-16 units.\nMethods for working with <code>u8</code>s as UTF-8 bytes.\nAn unicode codepoint stored as UTF-16.\nIterate over the units of the UTF-16 representation of a …\nAn unicode codepoint stored as UTF-8.\nRead or iterate over the bytes of the UTF-8 representation …\nReturn a <code>str</code> view of the array the codepoint is stored as.\nErrors returned by various conversion methods in this …\nHow many more bytes will you need to complete this …\nHow many more bytes will you need to complete this …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate an <code>Utf8Char</code> from a byte array after validating it.\nValidate and store an UTF-16 array as returned from …\nZero-cost constructor.\nCreate an <code>Utf16Char</code> from an array as returned from …\nCreate an <code>Utf8Char</code> from a single byte.\nCreate an <code>Utf8Char</code> from a single byte without checking …\nCreate an <code>Utf16Char</code> from a single unit.\nCreate an <code>Utf16Char</code> from a single unit without checking …\nCreate an <code>Utf8Char</code> of the first codepoint in an UTF-8 …\nValidate and store the first UTF-16 codepoint in the slice.\nA <code>from_slice_start()</code> that doesn’t validate the codepoint.\nStore the first UTF-16 codepoint of the slice.\nCreate an <code>Utf8Char</code> from a string slice. The string must …\nCreate an <code>Utf16Char</code> from a string slice. The string must …\nCreate an <code>Utf8Char</code> from the first codepoint in a <code>str</code>.\nCreate an <code>Utf16Char</code> from the first codepoint in a string …\nValidate and store a UTF-16 pair as returned from …\nCreate an <code>Utf16Char</code> from a tuple as returned from …\nProduces more detailed errors than <code>char::from_u32()</code>\nConvert a UTF-16 pair as returned from <code>.to_utf16_array()</code> …\nConvert a UTF-16 array as returned from <code>.to_utf16_array()</code> …\nCreate a <code>char</code> from the start of an UTF-16 slice, and also …\nConvert a UTF-16 pair as returned from <code>.to_utf16_tuple()</code> …\nConvert a UTF-16 tuple as returned from <code>.to_utf16_tuple()</code> …\nConvert an UTF-8 sequence as returned from <code>.to_utf8_array()</code>…\nConvert an UTF-8 sequence into a char.\nCreate a <code>char</code> from the start of an UTF-8 slice, and also …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIterate over the byte values.\nIterate over the units.\nChecks that the codepoint is an ASCII character.\nChecks that the codepoint is an ASCII character.\nChecks that the codepoint is in the basic multilingual …\nDoes this <code>u16</code> need another <code>u16</code> to complete a codepoint? …\nConverts an iterator of <code>Utf8Char</code> (or <code>&amp;Utf8Char</code>) to an …\nConverts an iterator of <code>Utf16Char</code> (or <code>&amp;Utf16Char</code>) to an …\nIterate over the one or two units in the UTF-16 …\nIterate over or read the one to four bytes in the UTF-8 …\nIterator types that you should rarely need to name\nThe number of bytes this character needs.\nThe number of units this character is made up of.\nExpose the internal array and the number of used bytes.\nGet the character represented as an array of two units.\nConverts an iterator of <code>Utf8Char</code>s or <code>&amp;Utf8Char</code>s to an …\nConvert from UTF-8 to UTF-32\nConvert from UTF-16 to UTF-32\nWrite the internal representation to a slice, and then …\nWrite the internal representation to a slice, and then …\nThe second <code>u16</code> is used for surrogate pairs.\nConverts an iterator of <code>Utf16Char</code> (or <code>&amp;Utf16Char</code>) to an …\nGet the UTF-16 representation of this codepoint.\nConvert this <code>char</code> to UTF-16.\nConvert this <code>char</code> to UTF-16. The second item is <code>Some</code> if a …\nDecodes bytes as UTF-16 and groups them into <code>Utf16Char</code>s\nGet the UTF-8 representation of this codepoint.\nConvert this char to an UTF-8 array, and also return how …\nDecodes bytes as UTF-8 and groups them into <code>Utf8Char</code>s\nWill you need an extra unit to complete this codepoint?\nEquivalent to <code>.char_indices()</code> but produces <code>Utf16Char</code>s.\nDecode <code>u16</code> slices as UTF-16 and iterate over the …\nEquivalent to <code>.chars()</code> but produces <code>Utf16Char</code>s.\nEquivalent to <code>.char_indices()</code> but produces <code>Utf8Char</code>s.\nDecode <code>u8</code> slices as UTF-8 and iterate over the codepoints …\nEquivalent to <code>.chars()</code> but produces <code>Utf8Char</code>s.\nNot a valid unicode codepoint.\nThe encoded codepoint is invalid:\nThis byte belongs to a previous sequence. Is given for …\n<code>Utf8Char</code> or <code>Utf16Char</code> cannot be empty.\nThe slice is empty.\nCannot create an <code>Utf8Char</code> or <code>Utf16Char</code> from the first …\nSomething is wrong with the first byte.\nThe first unit is a trailing/low surrogate, which is never …\nThe first unit is a trailing/low surrogate, which is never …\nThe first unit is a low surrogate.\nReasons why <code>Utf8Char::from_str()</code> or <code>Utf16Char::from_str()</code> …\nA trailing surrogate was expected when the end was reached.\nReasons why an <code>u32</code> is not a valid UTF codepoint.\nThe first unit requires a second unit, but it’s not a …\nReasons why a <code>[u16; 2]</code> doesn’t form a valid UTF-16 …\nCannot tell whether an <code>u16</code> needs an extra unit, because it…\nReasons why a slice of <code>u16</code>s doesn’t start with valid …\nReasons why one or two <code>u16</code>s are not valid UTF-16, in …\nReasons why a byte sequence is not valid UTF-8, excluding …\nReasons why a byte array is not valid UTF-8, in sinking …\nReasons why a byte is not the start of a UTF-8 codepoint.\nReasons why a byte slice is not valid UTF-8, in sinking …\nThe first and only unit requires a second unit.\nThe first and only unit requires a second unit.\n<code>Utf8Char</code> or <code>Utf16Char</code> cannot store more than a single …\nThe byte at index 1…3 should be a continuation byte, but …\nThere are too many leading zeros: it could be a byte …\nThe second unit is needed, but is not a trailing surrogate.\nThe first unit requires a second one, but it’s not a …\nYou provided a second unit, but the first one stands on …\nIt’s higher than the highest codepoint (which is …\nSequences cannot be longer than 4 bytes. Is given for …\nThe slice is too short; n bytes was required.\nA trailing surrogate was not preceeded by a leading …\nA leading surrogate was followed by an unit that was not a …\nTypes of invalid sequences encountered by <code>Utf16CharParser</code>.\nIt’s reserved for UTF-16 surrogate pairs.“\nNot a valid UTF-8 sequence.\nSomething is certainly wrong with the first byte.\nGet the range of values for which this error would be …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn <code>Utf16CharMerger</code> that also produces offsets and lengths, …\nAn iterator over the codepoints in a <code>str</code> represented as …\nDecodes UTF-16 characters from a <code>u16</code> iterator into …\nThe iterator type returned by <code>iter_units()</code>\nAn iterator over the codepoints in a <code>str</code> represented as …\nIterate over the units of the UTF-16 representation of a …\nAn <code>Utf8CharMerger</code> that also produces offsets and lengths, …\nAn iterator over the <code>Utf8Char</code> of a string slice, and their …\nDecodes UTF-8 characters from a byte iterator into <code>Utf8Char</code>…\nThe iterator type returned by <code>iter_bytes()</code>\nAn iterator over the codepoints in a <code>str</code> represented as …\nRead or iterate over the bytes of the UTF-8 representation …\nExtract the remainder of the source slice.\nExtract the remainder of the source slice.\nExtract the remainder of the source <code>str</code>.\nExtract the remainder of the source <code>str</code>.\nExtract the remainder of the source <code>str</code>.\nExtract the remainder of the source <code>str</code>.\nReturns the argument unchanged.\nA less generic constructor than <code>iter_bytes()</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nA less generic constructor than <code>iter_units()</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nExtracts the source iterator.\nExtracts the source iterator.\nExtract the inner iterator.\nExtract the inner iterator.\nReturns an iterator over the remaining units. Unlike …")